import * as t from 'tinyemitter';
import * as g from '../../core';
import * as x from '../fixed-table';
import './style.css';
import { DataGridConstructor } from '../../core';
export declare type SortBlockFn = () => Node;
export declare type SortBlock = string | SortBlockFn;
export default function <T extends DataGridConstructor>(Base: T): {
    new (...args: any[]): {
        sortColumn: string | g.ColumnObj | null;
        sortOrderIndex: number;
        clickEventHandler?: Function | undefined;
        setSort(sortColumn?: string | g.ColumnObj | null, newOrderIndex?: number): void;
        destroy(...args: any[]): void;
        readonly el: HTMLDivElement;
        readonly ui: {
            [prop: string]: HTMLElement;
        };
        options: g.InnerDataGridOptions;
        curData: g.TableData;
        children?: g.default[] | undefined;
        fixedTables?: x.FixedGrids | undefined;
        readonly parent?: g.default | undefined;
        fixedColumns?: number | undefined;
        fixedPlace?: "left" | "right" | undefined;
        setData(data: g.TableData): void;
        showModal(html?: string): void;
        hideModal(): void;
        e: any;
        on(name: string, handle: t.IHandle): void;
        off(name: string, handle?: t.IHandle | undefined): void;
        emit(name: string, ...args: any[]): void;
    };
} & T;
